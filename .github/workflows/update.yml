name: Update Subtrees

on:
    schedule:
        - cron: "0 */4 * * *"
    workflow_dispatch:

jobs:
    update:
        runs-on: ubuntu-latest
        outputs:
            updated: ${{ steps.commit.outputs.updated }}
        permissions:
            contents: write
            actions: write

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0
                  token: ${{ secrets.GH_PAT }}

            - name: Configure Git
              run: |
                  git config user.name "github-actions[bot]"
                  git config user.email "github-actions[bot]@users.noreply.github.com"

            - name: Update all subtrees
              run: |
                  # Track if any updates occurred
                  UPDATES_MADE=false

                  # Process keiyoushi
                  echo "processing keiyoushi"
                  git remote add keiyoushi https://github.com/keiyoushi/extensions.git 2>/dev/null || true
                  git fetch keiyoushi repo

                  echo "current commit in keiyoushi subtree:"
                  git log --oneline -1 extensions/keiyoushi/ || echo "no existing subtree"

                  echo "latest commit in keiyoushi remote:"
                  git log --oneline -1 keiyoushi/repo

                  if git subtree pull --prefix=extensions/keiyoushi keiyoushi repo --squash; then
                    echo "keiyoushi subtree updated successfully"
                    UPDATES_MADE=true
                  else
                    echo "no updates available for keiyoushi or update failed"
                  fi

                  # Process kohi-den
                  echo "processing kohi-den"
                  git remote add kohi-den https://kohiden.xyz/Kohi-den/extensions.git 2>/dev/null || true
                  git fetch kohi-den main

                  echo "current commit in kohi-den subtree:"
                  git log --oneline -1 extensions/kohi-den/ || echo "no existing subtree"

                  echo "latest commit in kohi-den remote:"
                  git log --oneline -1 kohi-den/main

                  if git subtree pull --prefix=extensions/kohi-den kohi-den main --squash; then
                    echo "kohi-den subtree updated successfully"
                    UPDATES_MADE=true
                  else
                    echo "no updates available for kohi-den or update failed"
                  fi

                  # Store the result for next step
                  echo "UPDATES_MADE=$UPDATES_MADE" >> $GITHUB_ENV

            - name: Check git status
              run: |
                  echo "git status"
                  git status
                  echo "git status porcelain"
                  git status --porcelain
                  echo "files that changed"
                  git diff --name-only
                  echo "commits ahead of origin"
                  git rev-list --count HEAD ^origin/main || echo "0"
                  echo "recent commits"
                  git log --oneline -5

            - name: Commit and push changes
              id: commit
              run: |
                  # Check if we're ahead of origin (meaning subtree commits were made)
                  COMMITS_AHEAD=$(git rev-list --count HEAD ^origin/main 2>/dev/null || echo "0")

                  echo "commits ahead of origin: $COMMITS_AHEAD"

                  # Check for any uncommitted changes OR if we're ahead of origin
                  if [[ -n $(git status --porcelain) ]] || [[ "$UPDATES_MADE" == "true" ]] || [[ "$COMMITS_AHEAD" -gt 0 ]]; then
                    echo "changes detected, pushing..."
                    
                    # Add any uncommitted files
                    if [[ -n $(git status --porcelain) ]]; then
                      git add .
                      git commit -m "Add uncommitted changes [$(date +'%Y-%m-%d %H:%M:%S')]"
                    fi

                    # Try to push, if it fails, fetch, rebase, and try again
                    MAX_RETRIES=5
                    RETRY_COUNT=0
                    while ! git push origin main && [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
                      echo "push failed. fetching and rebasing... (attempt $((RETRY_COUNT+1)) of $MAX_RETRIES)"
                      git fetch origin main
                      git rebase origin/main
                      RETRY_COUNT=$((RETRY_COUNT+1))
                    done

                    if [ $RETRY_COUNT -eq $MAX_RETRIES ]; then
                      echo "failed to push updates after $MAX_RETRIES attempts."
                      exit 1
                    fi

                    echo "successfully pushed changes"
                    echo "updated=true" >> $GITHUB_OUTPUT
                  else
                    echo "no changes to commit and not ahead of origin"
                    echo "updated=false" >> $GITHUB_OUTPUT
                  fi

    trigger-workflows:
        needs: update
        runs-on: ubuntu-latest
        if: success() && needs.update.outputs.updated == 'true'
        permissions:
            actions: write
        steps:
            - name: Trigger downstream workflows
              run: |
                  # Sync to mirror
                  echo "triggering sync workflow"
                  curl --fail -L \
                    -X POST \
                    -H "Accept: application/vnd.github+json" \
                    -H "X-GitHub-Api-Version: 2022-11-28" \
                    -H "Authorization: Bearer ${{ secrets.GH_PAT }}" \
                    https://api.github.com/repos/${{ github.repository }}/actions/workflows/sync.yml/dispatches \
                    -d '{"ref":"main"}' || echo "failed to trigger sync workflow"

                  # Deploy GitHub Pages
                  echo "triggering deploy workflow"
                  curl --fail -L \
                    -X POST \
                    -H "Accept: application/vnd.github+json" \
                    -H "X-GitHub-Api-Version: 2022-11-28" \
                    -H "Authorization: Bearer ${{ secrets.GH_PAT }}" \
                    https://api.github.com/repos/${{ github.repository }}/actions/workflows/deploy.yml/dispatches \
                    -d '{"ref":"main"}' || echo "failed to trigger deploy workflow"

                  # Deploy to repo branch
                  echo "triggering repo workflow"
                  curl --fail -L \
                    -X POST \
                    -H "Accept: application/vnd.github+json" \
                    -H "X-GitHub-Api-Version: 2022-11-28" \
                    -H "Authorization: Bearer ${{ secrets.GH_PAT }}" \
                    https://api.github.com/repos/${{ github.repository }}/actions/workflows/repo.yml/dispatches \
                    -d '{"ref":"main"}' || echo "failed to trigger repo workflow"

                  echo "all downstream workflows triggered"
